---
title: "FINAL_PROJECT"
format: html
---

## Taylor Swift 

```{r}
library(shiny)
library(tidyverse)
library(readr)
library(ggplot2)
library(readr)
library(dplyr)
library(plotly)

ui <- fluidPage(
  titlePanel("How and Why is Taylor Swift Influential?"),
  mainPanel(
    fluidRow(
      column(4,
             imageOutput("image1", click = "image1_click"),
             textOutput("info1")
      ),
      column(4,
             imageOutput("image2", click = "image2_click"),
             textOutput("info2")
      ),
      column(4,
             imageOutput("image3", click = "image3_click"),
             textOutput("info3")
      )
    )
  )
)

server <- function(input, output, session) {
  output$image1 <- renderImage({
    list(src = "image1.jpg", width = "400px", height = "400px", alt = "Image 1")
  })
  output$image2 <- renderImage({
    list(src = "image2.jpg", width = "400px", height = "400px", alt = "Image 2")
  })
  output$image3 <- renderImage({
    list(src = "image3.jpg", width = "400px", height = "400px", alt = "Image 3")
  })
  
  observeEvent(input$image1_click, {
    output$info1 <- renderText({
      "Likecount:1,984,198\nReplycount:\nRetweetcount: "
    })
  })
  observeEvent(input$image2_click, {
    output$info2 <- renderText({
      "Likecount:1,124,468\nReplycount:\nRetweetcount: "
    })
  })
  observeEvent(input$image3_click, {
    output$info3 <- renderText({
      "Likecount:848,969\nReplycount:\nRetweetcount: "
    })
  })
}



shinyApp(ui, server)

```

##  Trends & Activity 

```{r}
#slider bar range that can move, 
library(shiny)
library(dplyr)
library(ggplot2)

data <- read.csv("TaylorSwift13.csv")
data$date_wtime = as.Date(str_sub(data$date, 1, 10))

ui <- fluidPage(
  titlePanel("Taylor Swift's Twitter Activity"),
  sidebarLayout(
    sidebarPanel(
      sliderInput("date_range", "Select Date Range", 
                  min = min(data$date_wtime), max = max(data$date_wtime),
                  value = c(min(data$date_wtime), max(data$date_wtime)),
                  step = 1)
    ),
    mainPanel(
      plotOutput("tweet_plot")
    )
  )
)

server <- function(input, output) {
  filtered_data <- reactive({
    data %>%
      filter(date_wtime >= input$date_range[1] & date_wtime <= input$date_range[2]) %>%
      group_by(date_wtime) %>%
      summarise(content = n())
  })
  
  output$tweet_plot <- renderPlot({
    filtered_data() %>%
      ggplot(aes(x = date_wtime, y = content, color = content, size = content)) +
      geom_point() +
      scale_color_gradient(low = "lightblue", high = "blue") +
      labs(title = "Taylor Swift's Twitter Activity Over Time",
           x = "Date",
           y = "Number of Tweets")
  })
}

shinyApp(ui = ui, server = server)

```

## Outreach & Influence

```{r}

```
